#!/usr/bin/perl

#
# This script generates statistics for SAM files.
#
# Processing pipeline:
# file.sam -> samsplit -> file.sam.pos   -> MATLAB script -> file.sam.mlog 
#                         file.sam.cigar
#                         file.sam.seq
#                         file.sam.qual
#

use strict;
use warnings;
use Cwd;
use Cwd 'abs_path';

if (@ARGV < 1) {
    print "Usage: test_environment.pl <files>\n";
    exit(0);
}

# Hash containing the column numbers for the SAM fields
my %sam_fields = ("qname" => 1, 
                  "flag"  => 2, 
                  "rname" => 3,
                  "pos"   => 4,
                  "mapq"  => 5,
                  "cigar" => 6,
                  "rnext" => 7,
                  "pnext" => 8,
                  "tlen"  => 9,
                  "seq"   => 10,
                  "qual"  => 11,
                  "flag"  => 12,);

# Fields to extract from SAM files
my @fields = qw(pos cigar seq qual);

foreach my $file (@ARGV) {
    next unless (-f $file || -l $file); # only files and symlinks
    next unless ($file =~ m/\.sam$/);   # only SAM files

    #
    # Make current file ready for processing
    #
    if (-l $file) {
      $file = readlink($file); # read symlinks
    }
    $file = abs_path($file); # make absolute paths
    print "File: $file\n";

    #
    # Split file with samsplit
    #
    my @samsplit_files = ();
    foreach my $field (@fields) {

        # Generate name for samsplit output file
        push(@samsplit_files, "$file.$field");

        # Generate samsplit command
        my $samsplit_command = "samsplit --field=$sam_fields{$field} $file > $samsplit_files[-1]";
        print "Executing: $samsplit_command\n";
        system($samsplit_command) == 0 or die "'system' failed: $?";
    }

    #
    # Run MATLAB script
    #
    my $matlab_path = "/prog/matlab/R2014a/bin/matlab";
    my $matlab_input = "fn = '$file'; MATLAB_SCRIPT_NAME; exit;";
    my $matlab_command = "$matlab_path -nodesktop -nosplash -r \"$matlab_input\" > $file.mlog";
    print "Executing: $matlab_command\n";
    system($matlab_command) == 0 or die "'system' failed: $?";

    #
    # Delete files generated by samsplit
    #
    foreach my $samsplit_file (@samsplit_files) {
        print "Removing: $samsplit_file\n";
        unlink($samsplit_file) or warn "Could not unlink $samsplit_file: $!";
    }

    print "\n";
}

exit(0);

